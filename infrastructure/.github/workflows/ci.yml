---
name: CI

on:
  push:
    branches: [ "main", "feat/*", "release/*" ]
  pull_request:
    branches: [ "main", "feat/*", "release/*" ]
  schedule:
    - cron: '0 2 * * 1' # https://crontab.guru/#0_2_*_*_1

permissions:
  contents: read

jobs:
  lint-yaml:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run yamllint
        uses: ibiqlik/action-yamllint@v3

  lint-env-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run dotenvlinter in container
        run: docker run -i --rm --volume "$(pwd):/app" --workdir "/app" dotenvlinter/dotenv-linter:latest --exclude "*node_modules*" --recursive

  lint-folders:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run folderslint in container
        run: docker run -i --rm --volume "$(pwd):$(pwd)" --workdir "$(pwd)" sommerfeldio/folderslint:latest folderslint

  lint-filenames:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run ls-lint in container
        run: docker run -i --rm --volume "$(pwd):/data" --workdir "/data" lslintorg/ls-lint:1.11.0

  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          ignore_paths: node_modules target

  # lint-dockerfile:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: hadolint
  #       uses: hadolint/hadolint-action@v2.0.0
  #       with:
  #         dockerfile: src/test/workstations/caprica/Dockerfile

  lint-ansible:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: ansible-lint
        run: docker run --rm --volume "$(pwd)/src/main/workstations/caprica/provision:/data" cytopia/ansible-lint:latest ansible-playbook.yml

  ci-caprica:
    runs-on: ubuntu-latest
    needs: ['lint-yaml', 'shellcheck', 'lint-ansible']
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

  ci-kobol:
    runs-on: ubuntu-latest
    needs: ['lint-yaml', 'shellcheck', 'lint-ansible']
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

  on-failure:
    runs-on: ubuntu-latest
    needs: ['ci-caprica', 'ci-kobol', 'lint-yaml', 'lint-env-files', 'lint-folders', 'lint-filenames', 'shellcheck', 'lint-ansible']
    if: failure()

    steps:
      - name: Send Pipeline Status to Google Chat
        if: always()
        uses: Co-qn/google-chat-notification@releases/v1
        with:
          name: ${{ github.workflow }}
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
          status: failure
